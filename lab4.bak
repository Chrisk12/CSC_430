#lang plai-typed

;Apply Lamdas
((lambda (x) (+ x 2)) 3)
   ; It prints  5, yes

; It should be 9
((lambda (f g) (f (g 3)))
 (lambda (x) (+ x 3))
 (lambda (x) (* x 2)))

; curried add two numbers
(define (curried-add [a : number]) : (number -> number)
  (lambda (y) (+ a y)))

(test ((curried-add 3) 3) 6) 
(test ((curried-add 5) 3) 8)
(test ((curried-add 8) 3) 11) 

; curry2 takes a binary operator and does the operation to them
(define (curry2 [f : ('a 'b -> 'c)]) : ('a -> ('b -> 'c))
  (lambda (x) (lambda (y) (f x y))))

(test (((curry2 +) 3) 6) 9)
(test (((curry2 *) 3) 6) 18)

; curry3 takes a function that takes 3 things
; and does the fucntion to them
(define (curry3 [f : ('a 'b 'c -> 'd)]) : ('a -> ('b -> ('c -> 'd)))
  (lambda (x) (lambda (y) (lambda (z) (f x y z)))))

(test ((((curry3 (lambda (x y z) (* z (* x y)))) 1) 2) 3) 6) 
(test ((((curry3 (lambda (x y z) (- z (- x y)))) 2) 3) 4) 5) 
(test ((((curry3 (lambda (x y z) (* z (* x y)))) 10) 10) 10) 1000)
