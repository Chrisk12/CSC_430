#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 71 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 49 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
50 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 17
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 1546 0 28 3 16 #"#lang plai-typed"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 22 #"plai-typed/s-exp-match"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 17 #"print-only-errors"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; Defines Exprc"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"numC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"idC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 8 #"booleanC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"appC"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 3 #"iff"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ffi"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"binop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sym"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"lamC"
0 0 24 3 2 #" ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; Defines Values"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"numV"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 8 #"booleanV"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"closV"
0 0 24 3 2 #" ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; Defines the Binding Type which takes a symbol "
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; maps it to a number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"bind"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; An Alias for a list of bindings"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 4 #"cons"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; defining my error"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; Defines the Interpreter. Takes in an ExprC and a list of functions"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; and then evalutes the ExperC recursively and returns a number."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ["
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"numC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 8 #"booleanC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 8 #"booleanV"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"idC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"appC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"f-value"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 10 #"closV-body"
0 0 24 3 1 #" "
0 0 14 3 7 #"f-value"
0 0 24 3 7 #")      "
0 0 17 3 26 #";(FIRST MIGHT BREAK STUFF)"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 16 #"get-list-binding"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 9 #"closV-arg"
0 0 24 3 1 #" "
0 0 14 3 7 #"f-value"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 73
(
 #";(extend-env (bind (first (fdC-arg fd)) (eval (first a) env fds)) mt"
 #"-env)"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"lamC"
0 0 24 3 2 #" ("
0 0 14 3 5 #"param"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 5 #"closV"
0 0 24 3 1 #" "
0 0 14 3 5 #"param"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"binop"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #") (("
0 0 14 3 9 #"get-binop"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 3 #"iff"
0 0 24 3 1 #" "
0 0 14 3 3 #"ffi"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 9 #"booleanV?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"Not a boolean expression\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 10 #"booleanV-b"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 3 #"iff"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 3 #"ffi"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #"; Creates a list of binding from teh fdC-Arg and teh argument to the"
 #" function"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-list-binding"
0 0 24 3 2 #" ["
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ["
0 0 14 3 4 #"syms"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ["
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 74
(
 #";[(not (= (length syms) (length a))) (error 'get-list-bing \"Wrong S"
 #"ize)\")]"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"syms"
0 0 24 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"get-list-binding"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"syms"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#"; Looks for a symbol in an env and returns the number that is "
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; represented by the symbol."
0 0 24 29 1 #"\n"
0 8         382 62 2 #"(\0"
2 #")\0"
75 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"lookup"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"Env"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 6 #"lookup"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 16 #"\"name not found\""
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            [("
7 #"wxtext\0"
3 8 #"symbol=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"bind-name"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 8 #"bind-val"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"lookup"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"env"
7 #"wxtext\0"
3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"; Checks to see if a symbol is a binary operator and returns true if"
 #" it is"
) 0 0 24 29 1 #"\n"
0 8         457 62 2 #"(\0"
2 #")\0"
90 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"check-if-binop"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"boolean"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"; Checks to see if a symbol is a reserved symbol and returns true if"
 #" it is"
) 0 0 24 29 1 #"\n"
0 8         732 62 2 #"(\0"
2 #")\0"
145 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"de"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 3 #"ine"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 24 #"check-if-reserved-symbol"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"boolean"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"with"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #"; Gets the function associated with the binary operator and returns "
 #"that "
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #"; operator"
0 0 24 29 1 #"\n"
0 8         517 62 2 #"(\0"
2 #")\0"
102 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"get-binop"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"num+"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"num*"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"num-"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"num/"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"num<="
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 6 #"numeq?"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 9 #"get-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"\"NOT A BINOP\""
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Takes in two values and adds them together"
0 0 24 29 1 #"\n"
0 8         322 62 2 #"(\0"
2 #")\0"
63 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"num+"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"num+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 31 #"\"one argument was not a number\""
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Takes in two values and mult them together"
0 0 24 29 1 #"\n"
0 8         322 62 2 #"(\0"
2 #")\0"
63 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"num*"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"num*"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 31 #"\"one argument was not a number\""
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; Takes in two values and /"
0 0 17 3 14 #" them together"
0 0 24 29 1 #"\n"
0 8         437 62 2 #"(\0"
2 #")\0"
86 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"num/"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"num/"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 18 #"\"Division by zero\""
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"num/"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 31 #"\"one argument was not a number\""
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; Takes in two values and - them together"
0 0 24 29 1 #"\n"
0 8         322 64 2 #"(\0"
2 #")\0"
63 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"num-"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"num-"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 31 #"\"one argument was not a number\""
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; Takes in two values and <= them together"
0 0 24 29 1 #"\n"
0 8         322 64 2 #"(\0"
2 #")\0"
63 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"num<="
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"num-"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 31 #"\"one argument was not a number\""
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; Takes in two values and eq? them together"
0 0 24 29 1 #"\n"
0 8         432 64 2 #"(\0"
2 #")\0"
85 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"de"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 3 #"ine"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numeq?"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"Value"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"numV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"numV-n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"booleanV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 9 #"booleanV?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"     ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"booleanV-b"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 10 #"booleanV-b"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"r"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #"; Searches through a list of symbols to see if a symbol s is in the "
 #"list."
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #"; returns true if it is, false otherwise."
0 0 24 29 1 #"\n"
0 8         297 64 2 #"(\0"
2 #")\0"
58 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"check-in-list"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 3 #"lst"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 4 #")]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"boolean"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"lst"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 8 #"symbol=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"lst"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"check-in-list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"lst"
7 #"wxtext\0"
3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #"; 3.11 Defining a parser that takes an s expression and convert it t"
 #"o an ExperC. "
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"s-exp-number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numC"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->number"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 14 #"s-exp-boolean?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 8 #"booleanC"
0 0 24 3 2 #" ("
0 0 14 3 14 #"s-exp->boolean"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"s-exp-symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 16 #"check-if-boolean"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"get-boolean-value"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 24 #"check-if-reserved-symbol"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"invalid input :(\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 3 #"idC"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 4 #"with"
0 0 24 3 2 #" {"
0 0 14 3 6 #"SYMBOL"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 24 3 1 #"}"
0 0 14 3 3 #"..."
0 0 24 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 24 3 2 #"} "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"args"
0 0 24 3 2 #" ("
0 0 14 3 11 #"list->s-exp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #"("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 6 #"params"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-params"
0 0 24 3 2 #" ("
0 0 14 3 11 #"list->s-exp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #"("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 18 #"not-valid-symbols?"
0 0 24 3 1 #" "
0 0 14 3 6 #"params"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 16 #"list-has-no-dups"
0 0 24 3 1 #" "
0 0 14 3 6 #"params"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"Invalid input :(\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"appC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"lamC"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 6 #"params"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 10 #"get-values"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"get-list-exprC"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 6 #"))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 24 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 24 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 24 3 2 #"} "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 2 #"fn"
0 0 24 3 2 #" {"
0 0 14 3 6 #"SYMBOL"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"} "
0 0 14 3 3 #"ANY"
0 0 24 3 2 #"} "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 18 #"not-valid-symbols?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"create-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 16 #"list-has-no-dups"
0 0 24 3 2 #" ("
0 0 14 3 11 #"create-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"invalid input :(\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"lamC"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"create-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 7 #"))))])]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 2 #"#;"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp-symbol?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 24 #"check-if-reserved-symbol"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"create-appC"
0 0 24 3 2 #"  "
0 0 14 3 1 #"s"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 6 #"SYMBOL"
0 0 24 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 24 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 24 3 2 #"} "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 17 #"test-of-operators"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 6 #"second"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"invalid input :(\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 17 #"test-of-operators"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"third"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"invalid input :(\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"binop"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 7 #"))))])]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"s-exp-match?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"{"
0 0 14 3 3 #"ANY"
0 0 24 3 1 #" "
0 0 14 3 3 #"ANY"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"} "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"create-appC"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"invalid input :(\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; Takes in a list of symbols and returns true if a symbol in the lis"
 #"t"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #"; is the same as the reserved symbol. False otherwise."
0 0 24 29 1 #"\n"
0 8         272 62 2 #"(\0"
2 #")\0"
53 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 18 #"not-valid-symbols?"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 4 #"syms"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 4 #")]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"boolean"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"syms"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 24 #"check-if-reserved-symbol"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"syms"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 9 #"not-valid"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"\"Invalid input\""
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 18 #"not-valid-symbols?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"syms"
7 #"wxtext\0"
3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; Checks if a symbol is a boolean"
0 0 24 29 1 #"\n"
0 8         212 62 2 #"(\0"
2 #")\0"
41 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 16 #"check-if-boolean"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 2 #"])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 2 #"or"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; Checks returns the correct booleanC"
0 0 24 29 1 #"\n"
0 8         227 62 2 #"(\0"
2 #")\0"
44 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 17 #"get-boolean-value"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"booleanC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"booleanC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; Gets t"
0 0 17 3 35 #"he parameters from a with statement"
0 0 24 29 1 #"\n"
0 8         527 62 2 #"(\0"
2 #")\0"
104 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-params"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 12 #"s-expression"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 4 #"syms"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 4 #")]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 4 #"syms"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"s-exp->symbol"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"second"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 6 #"))))) "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"s-exp->symbol"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 6 #"))))) "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"               ("
7 #"wxtext\0"
3 10 #"get-params"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"list->s-exp"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 4 #"))) "
7 #"wxtext\0"
3 4 #"syms"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-params"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"list->s-exp"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 4 #"))) "
7 #"wxtext\0"
3 4 #"syms"
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; Gets t"
0 0 17 3 8 #"he expre"
0 0 17 3 44 #"ssion to be evalueated from a with statement"
0 0 24 29 1 #"\n"
0 8         392 64 2 #"(\0"
2 #")\0"
77 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-values"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 12 #"s-expression"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 10 #"get-values"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 18 #"\"Invalid input :(\""
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 3 #"not"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"s-exp-match?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 6 #"SYMBOL"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ANY"
7 #"wxtext\0"
3 3 #"} ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 6 #")))) ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 4 #")))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-values"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"list->s-exp"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"; Gets and parses the rhs of the varaible declarations in a with sta"
 #"tement"
) 0 0 24 29 1 #"\n"
0 8         512 64 2 #"(\0"
2 #")\0"
101 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"get-list-exprC"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 12 #"s-expression"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 9 #"exprClist"
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 4 #")]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 9 #"exprClist"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 12 #"s-exp-match?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 6 #"SYMBOL"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ANY"
7 #"wxtext\0"
3 3 #"} ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"third"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 7 #"))))) ("
7 #"wxtext\0"
3 14 #"get-list-exprC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"list->s-exp"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 4 #"))) "
7 #"wxtext\0"
3 9 #"exprClist"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"get-list-exprC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"list->s-exp"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"args"
7 #"wxtext\0"
3 4 #"))) "
7 #"wxtext\0"
3 9 #"exprClist"
7 #"wxtext\0"
3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #"; Test to see if symbol is being used that is reserve symbol. Takes "
 #"in an"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #"; s expression and a position to operate on and th"
0 0 17 3 19 #"en check if it is a"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; reserve symbol."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"test-of-operators"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 2 #"] "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 8 #"position"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 3 #" (("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 4 #")]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp-symbol?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"position"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 24 #"check-if-reserved-symbol"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 8 #"position"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 7 #")))))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";Creates and appC by using the map operator on an S expression"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"create-appC"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 2 #"  "
0 0 14 3 5 #"ExprC"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"appC"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; Creates a List of symbols from an s-expresssion to be used in fdC"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"create-list"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 14 3 10 #"-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; Check to see if a list of symbols has duplicets. "
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; True => no dupes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"list-has-no-dups"
0 0 24 3 2 #" ["
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 4 #")]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"check-dupes"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #"; Takes a symbol and a list and checkes whether that symbol is in th"
 #"e list."
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 47 #" returns true if the symbol is not in the list."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"check-dupes"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #"] ["
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 4 #")]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 5 #"))) ("
0 0 14 3 11 #"check-dupes"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 16 #"list-has-no-dups"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; Parses the s expression and the list of function expressions and t"
 #"hen "
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #"; calls eval"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"top-eval"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"serialize"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; Takes a Value and outputs t"
0 0 17 3 23 #"he string version of it"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"serialize"
0 0 24 3 2 #" ["
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"numV?"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 9 #"to-string"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numV-n"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"to-string"
0 0 24 3 2 #" ("
0 0 14 3 10 #"booleanV-b"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 4 #"appC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"lamC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"appC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"lamC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"f2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 5 #"binop"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"idC"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idC"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numC"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numC"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 6 #")))) ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";===============TEST CASES======================="
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 8       14433 4 2 #"(\0"
2 #")\0"
1426 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"`3"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 7 #"stephen"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 7 #"stephen"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 2 #"} "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"booleanC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"booleanC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"get-list-exprC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"{{"
7 #"wxtext\0"
3 1 #"z"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"9"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"14"
7 #"wxtext\0"
3 4 #"}} {"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"98"
7 #"wxtext\0"
3 3 #"}} "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"9"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"14"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"98"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-params"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"{{"
7 #"wxtext\0"
3 1 #"z"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"9"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"14"
7 #"wxtext\0"
3 4 #"}} {"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"98"
7 #"wxtext\0"
3 3 #"}} "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"z"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 5 #"}}) ("
7 #"wxtext\0"
3 4 #"lamC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"appC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"lamC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 6 #"const5"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"_"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"            "
7 #"wxtext\0"
3 6 #"mt-env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"15"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"appC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"lamC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"f1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"appC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"lamC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"f2"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 49 #"                                                ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"4"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                      ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"                "
7 #"wxtext\0"
3 6 #"mt-env"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 16 #"\"name not found\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"bind"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 6 #")))) ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"8"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"bind"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"bind"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"12"
7 #"wxtext\0"
3 6 #")))) ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"17"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #";("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"top-eval"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"1}) (numV 2))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-params"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 2 #"{{"
7 #"wxtext\0"
3 1 #"z"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"9"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"14"
7 #"wxtext\0"
3 4 #"}} {"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"98"
7 #"wxtext\0"
3 3 #"}} "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"z"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-params"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 3 #"{} "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"`#t"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"booleanC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"`#t"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"num<="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"num<="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"num<="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 31 #"\"one argument was not a number\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numeq?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numeq?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numeq?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"7"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"8"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numeq?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"7"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"7"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"numeq?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"7"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 3 #"eq?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 4 #"}) ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"booleanC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"serialize"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 3 #"\"3\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"serialize"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"booleanV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 4 #"\"#t\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 4 #"with"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"z"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"9"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"14"
7 #"wxtext\0"
3 4 #"}} {"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"98"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"z"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 4 #"}}) "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 4 #"appC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"lamC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"z"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"z"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 4 #"))) "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"9"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"14"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"98"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #";("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"top-eval"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"11"
7 #"wxtext\0"
3 2 #"} "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"10}) (numV 10))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #";("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 58 #" (if (>= (numC 0) 0) (numC 5) (numC 10)) empty ) (numV 5))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #";("
7 #"wxtext\0"
3 60 #"test (eval (if (>= (numC 0) 1) (numC 10)) empty ) (numV 10))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #";("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 49 #"'{if false 3 4}) (if (numC 2) (numC 3) (numC 4)))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"check-if-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"check-if-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"check-if-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"check-if-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"check-if-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"check-in-list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"check-in-list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"b"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"c"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"check-in-list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"b"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"get-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"num+"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"get-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"num*"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"get-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"num-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"get-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"num/"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"get-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 13 #"\"NOT A BINOP\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 16 #"list-has-no-dups"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"b"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"c"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 16 #"list-has-no-dups"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"/"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 18 #"\"invalid input :(\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 18 #"\"invalid input :(\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"-"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 18 #"\"invalid input :(\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 18 #"\"invalid input :(\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 18 #"\"invalid input :(\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 18 #"\"invalid input :(\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"`"
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 18 #"\"invalid input :(\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 39 #"; ======= DEPRECATED CODE ============="
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"; ==== TEST ===="
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #"#;"
93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 2 #"(\0"
2 #")\0"
848 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"appC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 4 #"appC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"6"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"ifleq0"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"ifleq0"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"twice"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 9 #"realtwice"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 5 #")}) ("
7 #"wxtext\0"
3 3 #"fdC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"twice"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"appC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 9 #"realtwice"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 5 #")))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"minus"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"-1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 6 #"))}) ("
7 #"wxtext\0"
3 3 #"fdC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"minus"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"-1"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 5 #")))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"realtwice"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 5 #")}) ("
7 #"wxtext\0"
3 3 #"fdC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 9 #"realtwice"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 5 #"twice"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"15"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"realtwice"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 4 #")}) "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                      ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"twice"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 9 #"realtwice"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 6 #")}))) "
7 #"wxtext\0"
3 2 #"30"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"p"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 5 #"}}) ("
7 #"wxtext\0"
3 3 #"fdC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"p"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"p"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 3 #"}})"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 44 #"                                           ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 7 #"}}))) ("
7 #"wxtext\0"
3 4 #"numV"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"p"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 3 #"}})"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 44 #"                                           ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 6 #"}}))) "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 6 #"}}))) "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 4 #"}}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 4 #" {} "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 5 #"}))) "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 2 #" {"
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #"} {"
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 5 #"}})))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 13 #"\"wrong arity\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"4"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"8"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 31 #"\"Function is of the wrong type\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 33 #"\"reference to undefined function\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 5 #"minus"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"8"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"minus"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"-1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 7 #"))}))) "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 5 #"minus"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"5"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"minus"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"-1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 6 #")}))) "
7 #"wxtext\0"
3 2 #"-5"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"test"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"eval"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 5 #"seven"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"seven"
7 #"wxtext\0"
3 5 #" () ("
7 #"wxtext\0"
3 5 #"minus"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"10"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"2"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"3"
7 #"wxtext\0"
3 5 #"))}) "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                      ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"minus"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"*"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"-1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 7 #"))}))) "
7 #"wxtext\0"
3 1 #"7"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 8 #"test/exn"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 4 #" () "
7 #"wxtext\0"
3 2 #"13"
7 #"wxtext\0"
3 3 #"}) "
7 #"wxtext\0"
3 18 #"\"invalid input :(\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    )"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"; ==== CODE ===="
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #"#;"
93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 2 #"(\0"
2 #")\0"
58 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"; DEPRECATED"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 76
(
 #"; Defines the substition function from the book with a modification "
 #"to it to"
) 7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 41 #"; allow for variable number of parameters"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #"#;"
93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 2 #"(\0"
2 #")\0"
167 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 4 #")] ["
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 4 #")] ["
7 #"wxtext\0"
3 2 #"in"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 9 #"type-case"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"in"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"numC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"in"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 3 #"idC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 15 #"look-for-symbol"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 22 #"find-experc-to-replace"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                   ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"in"
7 #"wxtext\0"
3 3 #"])]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 4 #"appC"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"appC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 20 #"do-sub-for-arguments"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"in"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 6 #"ifleq0"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"iff"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"fii"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"ifleq0"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 33 #"                                ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"iff"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 33 #"                                ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"fii"
7 #"wxtext\0"
3 3 #"))]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ["
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"iff"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"fii"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"iff"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"fii"
7 #"wxtext\0"
3 5 #"))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"; DEPRECATED"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 72
(
 #"; Preforms the substition on all the arguments of a function and ret"
 #"urns"
) 7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 49 #"; a list of the substituded variable in the ExprC"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #"#;"
93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 2 #"(\0"
2 #")\0"
97 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 20 #"do-sub-for-arguments"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 3 #")] "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 31 #"                              ["
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #")] "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 31 #"                              ["
7 #"wxtext\0"
3 2 #"in"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #"  "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 2 #"] "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 31 #"                              ["
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 4 #")]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 2 #"or"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"cons"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"               ("
7 #"wxtext\0"
3 5 #"subst"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"               ("
7 #"wxtext\0"
3 20 #"do-sub-for-arguments"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"what"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"in"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 6 #")))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"; DEPRECATED"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 77
(
 #"; Returns the ExperC for the symbol we are trying to find in look-fo"
 #"r-symbol."
) 7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 62 #"; The needle is the symbol we are looking for in the haystack."
7 #"wxtext\0"
29 1 #"\n"
93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 2 #"(\0"
2 #")\0"
68 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 22 #"find-experc-to-replace"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 6 #"needle"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 2 #"] "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 33 #"                                ["
7 #"wxtext\0"
3 8 #"haystack"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #")] "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 33 #"                                ["
7 #"wxtext\0"
3 5 #"value"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
3 4 #")]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ExprC"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 8 #"symbol=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"needle"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"haystack"
7 #"wxtext\0"
3 4 #")) ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"value"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 22 #"find-experc-to-replace"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"needle"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"haystack"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"value"
7 #"wxtext\0"
3 5 #"))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"; DEPRECATED"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 57 #"; Tries to find the symbol in the symbol list for subst. "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 62 #"; The needle is the symbol we are looking for in the haystack."
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 39 #"; returns true if the symbol was found."
7 #"wxtext\0"
29 1 #"\n"
93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 2 #"(\0"
2 #")\0"
58 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"look-for-symbol"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 6 #"needle"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 8 #"haystack"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 4 #")]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"boolean"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"haystack"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"false"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"        [("
7 #"wxtext\0"
3 8 #"symbol=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"needle"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"haystack"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 4 #"true"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"look-for-symbol"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"needle"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"haystack"
7 #"wxtext\0"
3 5 #"))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #";DEPRECATED"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 76
(
 #"; Gets the fundefC in fds associated with a symbol n and returns the"
 #" FundefC"
) 7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #"#;"
93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 2 #"(\0"
2 #")\0"
76 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 4 #"fine"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-fundef"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"symbol"
7 #"wxtext\0"
3 3 #"] ["
7 #"wxtext\0"
3 3 #"fds"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"listof"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"FunDefC"
7 #"wxtext\0"
3 4 #")]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"FunDefC"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 6 #"empty?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"fds"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 10 #"get-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 33 #"\"reference to undefined function\""
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"    [("
7 #"wxtext\0"
3 5 #"cons?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"fds"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 21 #"                   [("
7 #"wxtext\0"
3 6 #"equal?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"fdC-name"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"fds"
7 #"wxtext\0"
3 5 #"))) ("
7 #"wxtext\0"
3 5 #"first"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"fds"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                   ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"get-fundef"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"rest"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"fds"
7 #"wxtext\0"
3 7 #"))])]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #";DEPRECATED"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 56 #"; Parses an  s expression and creates a funDef out of it"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #"#;"
93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 2 #"(\0"
2 #")\0"
84 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 5 #"efine"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"parse-fundef"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 12 #"s-expression"
7 #"wxtext\0"
3 3 #"]) "
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"FunDefC"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      [("
7 #"wxtext\0"
3 12 #"s-exp-match?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"{"
7 #"wxtext\0"
3 2 #"fn"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"SYMBOL"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ANY"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ANY"
7 #"wxtext\0"
3 2 #"} "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
3 3 #" [("
7 #"wxtext\0"
3 17 #"test-of-operators"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"second"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 18 #"\"invalid input :(\""
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"fdC"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 21 #"                    ("
7 #"wxtext\0"
3 11 #"create-list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 21 #"                    ("
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"fourth"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"s-exp->list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 7 #"))))])]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"error"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 5 #"parse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 34 #"\"Function is of the wrong type :(\""
7 #"wxtext\0"
3 4 #")]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 1 #")"
0           0
